<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Julen&#39;s Blog</title>
    <link>https://julen8.github.io/categories/linux/</link>
    <description>Recent content in linux on Julen&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a&gt;进行许可。&lt;br /&gt;&lt;br /&gt;&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 01 Jan 2024 19:29:04 +0800</lastBuildDate>
    <atom:link href="https://julen8.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RK3568_evb1_资料</title>
      <link>https://julen8.github.io/rk3568_evb1_%E8%B5%84%E6%96%99/</link>
      <pubDate>Mon, 01 Jan 2024 19:29:04 +0800</pubDate>
      <guid>https://julen8.github.io/rk3568_evb1_%E8%B5%84%E6%96%99/</guid>
      <description>3568_evb1_PATCHES.7z RK_EVB1_RK3568_DDR4P216SD6_V10_20200908.rar</description>
    </item>
    <item>
      <title>rk628d</title>
      <link>https://julen8.github.io/rk628d/</link>
      <pubDate>Mon, 01 Jan 2024 19:24:15 +0800</pubDate>
      <guid>https://julen8.github.io/rk628d/</guid>
      <description>参考驱动文件中的文档配置使用 驱动</description>
    </item>
    <item>
      <title>使用openssl转换crt证书为pfx</title>
      <link>https://julen8.github.io/%E4%BD%BF%E7%94%A8openssl%E8%BD%AC%E6%8D%A2crt%E8%AF%81%E4%B9%A6%E4%B8%BApfx/</link>
      <pubDate>Mon, 01 Jan 2024 19:16:46 +0800</pubDate>
      <guid>https://julen8.github.io/%E4%BD%BF%E7%94%A8openssl%E8%BD%AC%E6%8D%A2crt%E8%AF%81%E4%B9%A6%E4%B8%BApfx/</guid>
      <description>使用下面命令 openssl pkcs12 -export -out server.pfx -inkey server.key -in server.crt -certfile ../ca.crt ca.crt是根证书 参考 将证书文件转换为 PKCS#12 格式</description>
    </item>
    <item>
      <title>获取局域网内设备的ipv6地址(通过ipv4或mac)</title>
      <link>https://julen8.github.io/%E8%8E%B7%E5%8F%96%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E8%AE%BE%E5%A4%87%E7%9A%84ipv6%E5%9C%B0%E5%9D%80%E9%80%9A%E8%BF%87ipv4%E6%88%96mac/</link>
      <pubDate>Mon, 01 Jan 2024 19:14:43 +0800</pubDate>
      <guid>https://julen8.github.io/%E8%8E%B7%E5%8F%96%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E8%AE%BE%E5%A4%87%E7%9A%84ipv6%E5%9C%B0%E5%9D%80%E9%80%9A%E8%BF%87ipv4%E6%88%96mac/</guid>
      <description>linux下获取局域网设备的ipv6地址 脚本如下 #cat /usr/bin/get_ipv6.sh #!/usr/bin/env bash ipv4_to_mac() { if [ &amp;#34;${1}_y&amp;#34; = &amp;#34;_y&amp;#34; ]; then return fi ipaddr=$1 ping -c 2 &amp;#34;$ipaddr&amp;#34; &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 grep ^&amp;#34;${ipaddr} &amp;#34; /proc/net/arp | awk &amp;#39;{print $4}&amp;#39; } get_ipv6() { MAC=$1 if [ &amp;#34;$MAC&amp;#34; = &amp;#34;&amp;#34; ]; then exit 0 fi IP=$(ip</description>
    </item>
    <item>
      <title>RK平台MIPI屏调试指南</title>
      <link>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0mipi%E5%B1%8F%E8%B0%83%E8%AF%95%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 01 Jan 2024 19:12:06 +0800</pubDate>
      <guid>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0mipi%E5%B1%8F%E8%B0%83%E8%AF%95%E6%8C%87%E5%8D%97/</guid>
      <description>RK 平台 MIPI屏调试指南 1.RK平台mipi屏初始化序列配置 RK平台新的SDK已经统一采用下面方式配置mipi参数，如：RK3288 8.1 SDK</description>
    </item>
    <item>
      <title>RK平台蓝牙配网</title>
      <link>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91/</link>
      <pubDate>Mon, 01 Jan 2024 19:09:17 +0800</pubDate>
      <guid>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0%E8%93%9D%E7%89%99%E9%85%8D%E7%BD%91/</guid>
      <description>蓝牙配网 固件需要选择 BR2_PACKAGE_DEVICEIO_RELEASE=y 设备端: 1.进入web页面 网络-高级设置-启用 WiFi功能(如果有其它方式启动WiFi理论上也是可以的) 2.执行以下命</description>
    </item>
    <item>
      <title>RK平台SPI使用</title>
      <link>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0spi%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 2024 19:07:24 +0800</pubDate>
      <guid>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0spi%E4%BD%BF%E7%94%A8/</guid>
      <description>rk平台SPI使用 1.kernel代码 drivers/spi/spi.c #spi驱动框架 drivers/spi/spi‐rockchip.c #rk spi各接口实现 drivers/spi/spidev.c #创建spi</description>
    </item>
    <item>
      <title>RK平台GPIO号计算</title>
      <link>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0gpio%E5%8F%B7%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Mon, 01 Jan 2024 19:05:05 +0800</pubDate>
      <guid>https://julen8.github.io/rk%E5%B9%B3%E5%8F%B0gpio%E5%8F%B7%E8%AE%A1%E7%AE%97/</guid>
      <description>定义在如下文件中kernel/include/dt-bindings/pinctrl/rockchip.h // kernel/include/dt-bindings/pinctrl/rockchip.h #define RK_GPIO0 0 #define RK_GPIO1 1 #define RK_GPIO2 2 #define RK_GPIO3 3 #define RK_GPIO4 4</description>
    </item>
    <item>
      <title>Linux下软重启USB</title>
      <link>https://julen8.github.io/linux%E4%B8%8B%E8%BD%AF%E9%87%8D%E5%90%AFusb/</link>
      <pubDate>Mon, 01 Jan 2024 19:03:19 +0800</pubDate>
      <guid>https://julen8.github.io/linux%E4%B8%8B%E8%BD%AF%E9%87%8D%E5%90%AFusb/</guid>
      <description>linux下实现usb设备软件重启(软插拔) 有时候我们在linux下使用usb设备出现问题,但是又不方便重启或者拔插usb设备时,即可通过下</description>
    </item>
    <item>
      <title>Linux下脚本实现硬盘自动分区挂载(parted)</title>
      <link>https://julen8.github.io/linux%E4%B8%8B%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%A1%AC%E7%9B%98%E8%87%AA%E5%8A%A8%E5%88%86%E5%8C%BA%E6%8C%82%E8%BD%BDparted/</link>
      <pubDate>Mon, 01 Jan 2024 18:45:01 +0800</pubDate>
      <guid>https://julen8.github.io/linux%E4%B8%8B%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%A1%AC%E7%9B%98%E8%87%AA%E5%8A%A8%E5%88%86%E5%8C%BA%E6%8C%82%E8%BD%BDparted/</guid>
      <description>parted实现硬盘自动分区(GPT) 0.对磁盘进行分区 parted -s /dev/sda mklabel gpt #这里只分成一个分区 parted -s /dev/sda mkpart primary 0% 100% 1.格式化分区 #选用exfat可以在Wi</description>
    </item>
    <item>
      <title>rv1126下wifi热点</title>
      <link>https://julen8.github.io/rv1126%E4%B8%8Bwifi%E7%83%AD%E7%82%B9/</link>
      <pubDate>Mon, 01 Jan 2024 18:44:43 +0800</pubDate>
      <guid>https://julen8.github.io/rv1126%E4%B8%8Bwifi%E7%83%AD%E7%82%B9/</guid>
      <description>rv1126 + AW-NM372SM(海华模组) 软件使用hostapd iw 备注： RTL模组： 使用p2p0作为softap功能，通过内核驱动的配置生成p2p</description>
    </item>
    <item>
      <title>Linux USB设备调试(udev)</title>
      <link>https://julen8.github.io/linux-usb%E8%AE%BE%E5%A4%87%E8%B0%83%E8%AF%95udev/</link>
      <pubDate>Mon, 01 Jan 2024 18:44:29 +0800</pubDate>
      <guid>https://julen8.github.io/linux-usb%E8%AE%BE%E5%A4%87%E8%B0%83%E8%AF%95udev/</guid>
      <description>1.查看usb详细信息 udevadm info --path=/sys/class/net/usb0 udevadm info -a --path=/sys/class/net/usb0 2.udev规则文件 # cat /etc/udev/rules.d/80-local.rules SUBSYSTEM==&amp;#34;net&amp;#34;, \ ACTION==&amp;#34;add&amp;#34;, \ ATTRS{idVendor}==&amp;#34;2207&amp;#34;, \ ATTRS{idProduct}==&amp;#34;0016&amp;#34;, \ RUN+=&amp;#34;/root/udev.sh&amp;#34; # 可以在/root/udev.sh脚本里面使用`env`命令</description>
    </item>
    <item>
      <title>Linux配置NAT实现路由器功能</title>
      <link>https://julen8.github.io/linux%E9%85%8D%E7%BD%AEnat%E5%AE%9E%E7%8E%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Mon, 01 Jan 2024 18:44:16 +0800</pubDate>
      <guid>https://julen8.github.io/linux%E9%85%8D%E7%BD%AEnat%E5%AE%9E%E7%8E%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8A%9F%E8%83%BD/</guid>
      <description>Linux配置NAT实现路由器功能 1.将所有需要NAT上网的网卡全部添加到一个br里 创建网桥 br-1126 brctl addbr br-1126 将需要nat的网卡全部加入网桥 brctl addif br-1126 usb0 配</description>
    </item>
    <item>
      <title>rv1126应用层查看adc值</title>
      <link>https://julen8.github.io/rv1126%E5%BA%94%E7%94%A8%E5%B1%82%E6%9F%A5%E7%9C%8Badc%E5%80%BC/</link>
      <pubDate>Mon, 01 Jan 2024 18:43:14 +0800</pubDate>
      <guid>https://julen8.github.io/rv1126%E5%BA%94%E7%94%A8%E5%B1%82%E6%9F%A5%E7%9C%8Badc%E5%80%BC/</guid>
      <description>使用如下命令即可 cat /sys/bus/iio/devices/iio\:device0/in_voltage[0-5]_raw</description>
    </item>
    <item>
      <title>es7210 驱动调试</title>
      <link>https://julen8.github.io/es7210-%E9%A9%B1%E5%8A%A8%E8%B0%83%E8%AF%95/</link>
      <pubDate>Mon, 01 Jan 2024 18:26:50 +0800</pubDate>
      <guid>https://julen8.github.io/es7210-%E9%A9%B1%E5%8A%A8%E8%B0%83%E8%AF%95/</guid>
      <description>首先，将驱动移植到linux系统中，步骤如下， 1. 将ES7210.c, ES7210.h, es7210_config.c和es7210_config.h复制到.</description>
    </item>
    <item>
      <title>Linux下查看声卡以及录音</title>
      <link>https://julen8.github.io/linux%E4%B8%8B%E6%9F%A5%E7%9C%8B%E5%A3%B0%E5%8D%A1%E4%BB%A5%E5%8F%8A%E5%BD%95%E9%9F%B3/</link>
      <pubDate>Fri, 29 Dec 2023 21:28:00 +0800</pubDate>
      <guid>https://julen8.github.io/linux%E4%B8%8B%E6%9F%A5%E7%9C%8B%E5%A3%B0%E5%8D%A1%E4%BB%A5%E5%8F%8A%E5%BD%95%E9%9F%B3/</guid>
      <description>查看声卡 cat /proc/asound/cards 录音 arecord -D hw:1,0 -f cd -d 20 /tmp/micTest.wav 关于 -D 参数 hw:1,0 表示硬件上的第一个设备的第0个子设备, 可以用 arecord -l 命令查看 这里还可以用设备名例如 -D default:CARD=rockchiprk809co , 设备名可以用</description>
    </item>
  </channel>
</rss>
